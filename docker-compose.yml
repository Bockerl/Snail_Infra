version: '3.8'

services:
  # Kafka (KRaft 모드)
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_KRAFT_CLUSTER_ID=kraft-cluster-id
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,INTERNAL://:29092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - elk-net

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/scripts:/usr/share/elasticsearch/scripts
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - elk-net
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # ✅ init-container(컨테이너 시작 시, 실행될 명령어(es health check))
  init-index:
    image: curlimages/curl:7.87.0
    container_name: init-index
    volumes:
      - ./elasticsearch/scripts:/usr/share/elasticsearch/scripts
    command: ["sh", "/usr/share/elasticsearch/scripts/init-index.sh"]
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-net

  # Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.7.0
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - ./logstash/pipeline/member-log.conf:/usr/share/logstash/pipeline/member-log.conf
      - ./logstash/pipeline/auth-fail-log.conf:/usr/share/logstash/pipeline/auth-fail-log.conf
    ports:
      - "5044:5044"
    networks:
      - elk-net

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    networks:
      - elk-net

networks:
  elk-net:
    driver: bridge